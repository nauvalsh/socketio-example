{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["socket","App","useEffect","io","path","ENDPOINT","on","data","console","log","disconnect","className","src","logo","alt","onClick","emit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","exact","component","document","getElementById"],"mappings":"+MAAe,G,MAAA,IAA0B,kC,uBCcrCA,EAAS,KAkCEC,MAhCf,WAmBE,OAlBAC,qBAAU,WAUR,OATAF,EAASG,aARD,sCAQS,CACfC,KAPkBC,4BAWbC,GAAG,kBAAkB,SAACC,GAAD,OAAUC,QAAQC,IAAIF,MAClDP,EAAOM,GAAG,YAAY,SAACC,GAAD,OAAUC,QAAQC,IAAIF,MAC5CP,EAAOM,GAAG,eAAe,SAACC,GAAD,OAAUC,QAAQC,IAAIF,MAExC,kBAAMP,EAAOU,gBACnB,IAQD,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,0BAGA,wBAAQC,QAZQ,WAEpBf,EAAOgB,KAAK,aAAc,yBAUtB,kCC9BOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,eCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACzB,KAAK,IAAI0B,UAAW7B,IACjC,cAAC,IAAD,CAAO6B,UAAW7B,WAIxB8B,SAASC,eAAe,SAM1Bf,M","file":"static/js/main.337abe62.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n// socket\nimport { io } from 'socket.io-client';\n\n// endpoint\n// http://farm.co.id/socketserver\n// http://localhost:4001/socketserver\nconst URL = 'http://dreamfarm.co.id/socketserver';\nconst ENDPOINT = '/socketserver';\nconst SOCKET_ENDPOINT = ENDPOINT + '/socketio';\n\nlet socket = null;\n\nfunction App() {\n  useEffect(() => {\n    socket = io(URL, {\n      path: SOCKET_ENDPOINT, //path for connect to socketio server\n    });\n\n    // listening message from server\n    socket.on('welcomeMessage', (data) => console.log(data));\n    socket.on('fromTest', (data) => console.log(data));\n    socket.on('dataCreated', (data) => console.log(data));\n\n    return () => socket.disconnect();\n  }, []);\n\n  const handleOnClick = () => {\n    // emit to server\n    socket.emit('fromClient', 'Hello From CLIENT!!!');\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <button onClick={handleOnClick}>Emit to server</button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route component={App} />\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}